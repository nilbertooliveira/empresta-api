name: Devops

on:
  push:
    branches: [ master ]

jobs:
  build-js-production:
    name: Build JavaScript/CSS for Production Server
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v3

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2.3.1
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: unnecessary

      - name: Adding Known Hosts
        run: ssh-keyscan -p ${{ secrets.SSH_PORT}} -H ${{ secrets.SSH_HOST }}  >> ~/.ssh/known_hosts

      - name: NPM Build
        run: |
          npm install
          npm run prod
      - name: Put built assets in Artifacts
        uses: actions/upload-artifact@v3.0.0
        with:
          name: assets
          path: public
          retention-days: 3

  deploy-production:
    name: Deploy Project to Production Server
    runs-on: ubuntu-latest
    needs: [ build-js-production ]
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v3

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2.3.1
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: unnecessary

      - name: Adding Known Hosts
        run: ssh-keyscan -p ${{ secrets.SSH_PORT}} -H ${{ secrets.SSH_HOST }}  >> ~/.ssh/known_hosts

      - name: Fetch built assets from Artifacts
        uses: actions/download-artifact@v3.0.0
        with:
          name: assets
          path: public

      - name: Setup PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: '8.0'
          extensions: mbstring, bcmath

      - name: Composer install
        run: composer update -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        run: php artisan test

      - name: Setup Deployer
        uses: atymic/deployer-php-action@master
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          ssh-known-hosts: ${{ secrets.SSH_KNOWN_HOSTS }}

      - name: Deploy to Production
        env:
          DOT_ENV: ${{ secrets.DOT_ENV_PRODUCTION }}
        run: php vendor/bin/dep deploy prod --branch="master" -vv

      - name: Execute SSH commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Starting deploy"
            cd ${{ secrets.REMOTE_TARGET }}
            set -e
            APP_NAME=$(grep DOCKER_APP_NAME .env | cut -d '=' -f2)

            echo "Enter maintenance mode"
            docker-compose down

            echo "Em caso de falha o contexto muda devido a release, forço a parada, caso não exista iguinora o erro"
            {
                docker stop $(docker ps -a -q) 2>/dev/null
                docker rm $(docker ps -a -q) 2>/dev/null
            } || {
              echo "Não existem containers...."
            }

            echo "Exit maintenance mode"
            docker-compose up -d

            echo "Install vendor"
            docker exec ${APP_NAME} composer update

            #echo "Migrate database"
            #docker exec ${APP_NAME} php artisan migrate

            echo "Deploy successfuly"
